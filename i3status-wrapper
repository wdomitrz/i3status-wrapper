#!/usr/bin/env python3
# vim:foldmethod=marker

import json
from multiprocessing import Process
from subprocess import PIPE, Popen

# Config {{{
BLOCKS = [
    {
        "name": "terminal",
        "full_text": "üìÑ"
    },
    {
        "name": "menu",
        "full_text": "üîç"
    }
]


def process_blocks(old_blocks):
    return old_blocks + BLOCKS


BUTTONS = {
    "terminal": lambda **_: Popen(["x-terminal-emulator"], stdout=PIPE, stderr=PIPE),
    "menu": lambda **_: Popen(["gtk-launch", "run-menu"], stdout=PIPE, stderr=PIPE),
}
# }}}

# Execution {{{
HEADER = {"version": 1, "click_events": True}


def show_status_text():
    i3status = Popen('i3status', stdout=PIPE)

    # Discard the first two lines
    for _ in range(2):
        i3status.stdout.readline()

    print(json.dumps(HEADER, separators=(',', ':')), flush=True)
    print('[', flush=True)

    while True:
        line = i3status.stdout.readline().decode()
        data = process_blocks(json.loads(line.strip(',')))
        print((',' if line[0] == ',' else '') +
              json.dumps(data, separators=(',', ':')), flush=True)


def handle_click(name, **kwargs):
    if name in BUTTONS:
        BUTTONS[name](name=name, **kwargs)


def clicks_handler():
    # Ignore the first line
    input()

    while True:
        line = input()
        data = json.loads(line.strip(','))
        handle_click(**data)


def main():
    process = Process(target=show_status_text)
    process.start()
    clicks_handler()
    # This will never happen, but let's keep it (as we may change
    # clicks_handler)
    process.join()


if __name__ == '__main__':
    main()
# }}}

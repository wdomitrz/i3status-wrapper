#!/usr/bin/env python3
# vim:foldmethod=marker

import json
import sys
from itertools import islice
from multiprocessing import Process
from subprocess import PIPE, Popen

# Config {{{
BLOCKS = [
    {
        "name": "terminal",
        "full_text": "üìÑ"
    },
    {
        "name": "menu",
        "full_text": "üîç"
    }
]


def process_blocks(old_blocks):
    return old_blocks + BLOCKS


BUTTONS = {
    "terminal": lambda **_: Popen(["x-terminal-emulator"], stdout=PIPE, stderr=PIPE),
    "menu": lambda **_: Popen(["gtk-launch", "run-menu"], stdout=PIPE, stderr=PIPE),
}
# }}}

# Execution {{{
HEADER = {"version": 1, "click_events": True}


def show_status_text():
    i3status = Popen('i3status', stdout=PIPE)

    print(json.dumps(HEADER, separators=(',', ':')), flush=True)
    print('[', flush=True)

    # Discard the first two lines
    for line in map(bytes.decode, islice(i3status.stdout, 2, None)):
        data = process_blocks(json.loads(line.strip(',')))
        print((',' if line[0] == ',' else '') +
              json.dumps(data, separators=(',', ':')), flush=True)
    print(']', flush=True)


def handle_click(name, **kwargs):
    if name in BUTTONS:
        BUTTONS[name](name=name, **kwargs)


def clicks_handler():
    for line in islice(sys.stdin, 1, None):
        data = json.loads(line.strip(','))
        Process(target=handle_click, kwargs=data).start()


def main():
    process = Process(target=show_status_text)
    process.start()
    clicks_handler()
    process.join()


if __name__ == '__main__':
    main()
# }}}
